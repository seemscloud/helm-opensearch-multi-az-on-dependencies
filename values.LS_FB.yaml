environment: "prod"

opensearch-master:
  nameOverride: ""
  fullnameOverride: ""

  clusterName: "observability-opensearch"
  nodeGroup: "master"

  masterService: "observability-opensearch-master"

  roles:
    - master

  replicas: 2
  minimumMasterNodes: 1
  majorVersion: ""

  global:
    dockerRegistry: ""
  image:
    repository: "opensearchproject/opensearch"
    tag: ""
    pullPolicy: "IfNotPresent"
  imagePullSecrets: [ ]

  opensearchHome: /usr/share/opensearch

  config:
    opensearch.yml: |
      cluster.name: observability-opensearch
      network.host: 0.0.0.0

      plugins:
        security:
          ssl:
            transport:
              pemcert_filepath: esnode.pem
              pemkey_filepath: esnode-key.pem
              pemtrustedcas_filepath: root-ca.pem
              enforce_hostname_verification: false
            http:
              enabled: true
              pemcert_filepath: esnode.pem
              pemkey_filepath: esnode-key.pem
              pemtrustedcas_filepath: root-ca.pem
          allow_unsafe_democertificates: true
          allow_default_init_securityindex: true
          authcz:
            admin_dn:
              - CN=kirk,OU=client,O=client,L=test,C=de
          audit.type: internal_opensearch
          enable_snapshot_restore_privilege: true
          check_snapshot_restore_write_privileges: true
          restapi:
            roles_enabled: ["all_access", "security_rest_api_access"]
          system_indices:
            enabled: true
            indices:
              [
                ".opendistro-alerting-config",
                ".opendistro-alerting-alert*",
                ".opendistro-anomaly-results*",
                ".opendistro-anomaly-detector*",
                ".opendistro-anomaly-checkpoints",
                ".opendistro-anomaly-detection-state",
                ".opendistro-reports-*",
                ".opendistro-notifications-*",
                ".opendistro-notebooks",
                ".opendistro-asynchronous-search-response*",
              ]

  extraEnvs:
    - name: node.store.allow_mmap
      value: "false"
    - name: DISABLE_INSTALL_DEMO_CONFIG
      value: "false"
    - name: DISABLE_SECURITY_PLUGIN
      value: "false"
    - name: cluster.routing.allocation.awareness.attributes
      value: "zone"
    - name: cluster.routing.allocation.awareness.force.zone.values
      value: "az1,az2"
  envFrom: [ ]
  secretMounts: [ ]
  hostAliases: [ ]

  podAnnotations: { }
  labels: { }

  opensearchJavaOpts: "-Xmx4G -Xms4G"

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "2"
      memory: "5Gi"

  initResources: { }
  sidecarResources: { }

  rbac:
    create: false
    serviceAccountAnnotations: { }
    serviceAccountName: ""

  podSecurityPolicy:
    create: false

  persistence:
    enabled: false
    enableInitChown: true
    labels:
      enabled: false
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: { }

  extraVolumes: [ ]
  extraVolumeMounts: [ ]

  extraContainers: [ ]
  extraInitContainers: [ ]

  antiAffinityTopologyKey: "kubernetes.io/hostname"
  antiAffinity: "soft"
  nodeAffinity: { }

  topologySpreadConstraints: [ ]
  podManagementPolicy: "Parallel"
  schedulerName: ""

  lifecycle: { }
  keystore: [ ]

  priorityClassName: ""
  enableServiceLinks: true

  networkHost: "0.0.0.0"
  protocol: http
  httpPort: 9200
  transportPort: 9300

  service:
    labels: { }
    labelsHeadless: { }
    headless:
      annotations: { }
    type: ClusterIP
    nodePort: ""
    annotations: { }
    httpPortName: http
    transportPortName: transport
    loadBalancerIP: ""
    loadBalancerSourceRanges: [ ]
    externalTrafficPolicy: ""

  updateStrategy: RollingUpdate
  maxUnavailable: 1
  masterTerminationFix: false
  terminationGracePeriod: 120

  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000

  fsGroup: ""

  securityContext:
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 1000

  securityConfig:
    enabled: true
    path: "/usr/share/opensearch/plugins/opensearch-security/securityconfig"
    actionGroupsSecret: "observability-opensearch-security-plugin"
    configSecret: "observability-opensearch-security-plugin"
    internalUsersSecret: "observability-opensearch-security-plugin"
    rolesSecret: "observability-opensearch-security-plugin"
    rolesMappingSecret: "observability-opensearch-security-plugin"
    tenantsSecret: "observability-opensearch-security-plugin"
    config:
      securityConfigSecret: ""
      dataComplete: false
      data:
        audit.yml: |-
          ---
          _meta:
            type: "audit"
            config_version: 2

          config:
            enabled: true
            audit:
              enable_rest: true
              disabled_rest_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              enable_transport: true
              disabled_transport_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              ignore_users:
                - kibanaserver
              ignore_requests: []
              resolve_bulk_requests: false
              log_request_body: true
              resolve_indices: true
              exclude_sensitive_headers: true
            compliance:
              enabled: true
              internal_config: true
              external_config: false
              read_metadata_only: true
              read_watched_fields: {}
              read_ignore_users:
                - kibanaserver
              write_metadata_only: true
              write_log_diffs: false
              write_watched_indices: []
              write_ignore_users:
                - kibanaserver
        nodes_dn.yml: |-
          _meta:
            type: "nodesdn"
            config_version: 2
        whitelist.yml: |-
          ---
          _meta:
            type: "whitelist"
            config_version: 2
          
          config:
            enabled: false
            requests:
              /_cluster/settings:
                - GET
              /_cat/nodes:
                - GET

  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 3
    timeoutSeconds: 2000

  nodeSelector: { }
  tolerations: [ ]

  ingress:
    enabled: false

  networkPolicy:
    create: false
    http:
      enabled: false

  sysctlVmMaxMapCount: 262144
  sysctl:
    enabled: false

  plugins:
    enabled: false
    installList: [ ]

  extraObjects: [ ]

opensearch-data-az1:
  nameOverride: ""
  fullnameOverride: ""

  clusterName: "observability-opensearch"
  nodeGroup: "data-az1"

  masterService: "observability-opensearch-master"

  roles:
    - data

  replicas: 1
  minimumMasterNodes: 1
  majorVersion: ""

  global:
    dockerRegistry: ""
  image:
    repository: "opensearchproject/opensearch"
    tag: ""
    pullPolicy: "IfNotPresent"
  imagePullSecrets: [ ]

  opensearchHome: /usr/share/opensearch

  config:
    opensearch.yml: |
      cluster.name: observability-opensearch
      network.host: 0.0.0.0

      plugins:
        security:
          ssl:
            transport:
              pemcert_filepath: esnode.pem
              pemkey_filepath: esnode-key.pem
              pemtrustedcas_filepath: root-ca.pem
              enforce_hostname_verification: false
            http:
              enabled: true
              pemcert_filepath: esnode.pem
              pemkey_filepath: esnode-key.pem
              pemtrustedcas_filepath: root-ca.pem
          allow_unsafe_democertificates: true
          allow_default_init_securityindex: true
          authcz:
            admin_dn:
              - CN=kirk,OU=client,O=client,L=test,C=de
          audit.type: internal_opensearch
          enable_snapshot_restore_privilege: true
          check_snapshot_restore_write_privileges: true
          restapi:
            roles_enabled: ["all_access", "security_rest_api_access"]
          system_indices:
            enabled: true
            indices:
              [
                ".opendistro-alerting-config",
                ".opendistro-alerting-alert*",
                ".opendistro-anomaly-results*",
                ".opendistro-anomaly-detector*",
                ".opendistro-anomaly-checkpoints",
                ".opendistro-anomaly-detection-state",
                ".opendistro-reports-*",
                ".opendistro-notifications-*",
                ".opendistro-notebooks",
                ".opendistro-asynchronous-search-response*",
              ]

  extraEnvs:
    - name: node.store.allow_mmap
      value: "false"
    - name: DISABLE_INSTALL_DEMO_CONFIG
      value: "false"
    - name: DISABLE_SECURITY_PLUGIN
      value: "false"
    - name: node.attr.zone
      value: "az1"
  envFrom: [ ]
  secretMounts: [ ]
  hostAliases: [ ]

  podAnnotations: { }
  labels: { }

  opensearchJavaOpts: "-Xmx4G -Xms4G"

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "2"
      memory: "5Gi"

  initResources: { }
  sidecarResources: { }

  rbac:
    create: false
    serviceAccountAnnotations: { }
    serviceAccountName: ""

  podSecurityPolicy:
    create: false

  persistence:
    enabled: false
    enableInitChown: true
    labels:
      enabled: false
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: { }

  extraVolumes: [ ]
  extraVolumeMounts: [ ]

  extraContainers: [ ]
  extraInitContainers: [ ]

  antiAffinityTopologyKey: "kubernetes.io/hostname"
  antiAffinity: "soft"
  nodeAffinity: { }

  topologySpreadConstraints: [ ]
  podManagementPolicy: "Parallel"

  schedulerName: ""
  lifecycle: { }

  priorityClassName: ""
  keystore: [ ]
  enableServiceLinks: true

  networkHost: "0.0.0.0"
  protocol: http
  httpPort: 9200
  transportPort: 9300

  service:
    labels: { }
    labelsHeadless: { }
    headless:
      annotations: { }
    type: ClusterIP
    nodePort: ""
    annotations: { }
    httpPortName: http
    transportPortName: transport
    loadBalancerIP: ""
    loadBalancerSourceRanges: [ ]
    externalTrafficPolicy: ""

  updateStrategy: RollingUpdate
  maxUnavailable: 1
  masterTerminationFix: false
  terminationGracePeriod: 120

  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000

  fsGroup: ""

  securityContext:
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 1000

  securityConfig:
    enabled: true
    path: "/usr/share/opensearch/plugins/opensearch-security/securityconfig"
    actionGroupsSecret: "observability-opensearch-security-plugin"
    configSecret: "observability-opensearch-security-plugin"
    internalUsersSecret: "observability-opensearch-security-plugin"
    rolesSecret: "observability-opensearch-security-plugin"
    rolesMappingSecret: "observability-opensearch-security-plugin"
    tenantsSecret: "observability-opensearch-security-plugin"
    config:
      securityConfigSecret: ""
      dataComplete: false
      data:
        audit.yml: |-
          ---
          _meta:
            type: "audit"
            config_version: 2

          config:
            enabled: true
            audit:
              enable_rest: true
              disabled_rest_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              enable_transport: true
              disabled_transport_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              ignore_users:
                - kibanaserver
              ignore_requests: []
              resolve_bulk_requests: false
              log_request_body: true
              resolve_indices: true
              exclude_sensitive_headers: true
            compliance:
              enabled: true
              internal_config: true
              external_config: false
              read_metadata_only: true
              read_watched_fields: {}
              read_ignore_users:
                - kibanaserver
              write_metadata_only: true
              write_log_diffs: false
              write_watched_indices: []
              write_ignore_users:
                - kibanaserver
        nodes_dn.yml: |-
          _meta:
            type: "nodesdn"
            config_version: 2
        whitelist.yml: |-
          ---
          _meta:
            type: "whitelist"
            config_version: 2
          
          config:
            enabled: false
            requests:
              /_cluster/settings:
                - GET
              /_cat/nodes:
                - GET

  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 3
    timeoutSeconds: 2000

  nodeSelector: { }
  tolerations: [ ]

  ingress:
    enabled: false

  networkPolicy:
    create: false
    http:
      enabled: false

  sysctlVmMaxMapCount: 262144
  sysctl:
    enabled: false

  plugins:
    enabled: false
    installList: [ ]

  extraObjects: [ ]

opensearch-data-az2:
  nameOverride: ""
  fullnameOverride: ""

  clusterName: "observability-opensearch"
  nodeGroup: "data-az2"

  masterService: "observability-opensearch-master"

  roles:
    - data

  replicas: 1
  minimumMasterNodes: 1
  majorVersion: ""

  global:
    dockerRegistry: ""
  image:
    repository: "opensearchproject/opensearch"
    tag: ""
    pullPolicy: "IfNotPresent"
  imagePullSecrets: [ ]

  opensearchHome: /usr/share/opensearch

  config:
    opensearch.yml: |
      cluster.name: observability-opensearch
      network.host: 0.0.0.0

      plugins:
        security:
          ssl:
            transport:
              pemcert_filepath: esnode.pem
              pemkey_filepath: esnode-key.pem
              pemtrustedcas_filepath: root-ca.pem
              enforce_hostname_verification: false
            http:
              enabled: true
              pemcert_filepath: esnode.pem
              pemkey_filepath: esnode-key.pem
              pemtrustedcas_filepath: root-ca.pem
          allow_unsafe_democertificates: true
          allow_default_init_securityindex: true
          authcz:
            admin_dn:
              - CN=kirk,OU=client,O=client,L=test,C=de
          audit.type: internal_opensearch
          enable_snapshot_restore_privilege: true
          check_snapshot_restore_write_privileges: true
          restapi:
            roles_enabled: ["all_access", "security_rest_api_access"]
          system_indices:
            enabled: true
            indices:
              [
                ".opendistro-alerting-config",
                ".opendistro-alerting-alert*",
                ".opendistro-anomaly-results*",
                ".opendistro-anomaly-detector*",
                ".opendistro-anomaly-checkpoints",
                ".opendistro-anomaly-detection-state",
                ".opendistro-reports-*",
                ".opendistro-notifications-*",
                ".opendistro-notebooks",
                ".opendistro-asynchronous-search-response*",
              ]

  extraEnvs:
    - name: node.store.allow_mmap
      value: "false"
    - name: DISABLE_INSTALL_DEMO_CONFIG
      value: "false"
    - name: DISABLE_SECURITY_PLUGIN
      value: "false"
    - name: node.attr.zone
      value: "az2"
  envFrom: [ ]
  secretMounts: [ ]
  hostAliases: [ ]

  podAnnotations: { }
  labels: { }

  opensearchJavaOpts: "-Xmx4G -Xms4G"

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "2"
      memory: "5Gi"

  initResources: { }
  sidecarResources: { }

  rbac:
    create: false
    serviceAccountAnnotations: { }
    serviceAccountName: ""

  podSecurityPolicy:
    create: false

  persistence:
    enabled: false
    enableInitChown: true
    labels:
      enabled: false
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: { }

  extraVolumes: [ ]
  extraVolumeMounts: [ ]

  extraContainers: [ ]
  extraInitContainers: [ ]

  antiAffinityTopologyKey: "kubernetes.io/hostname"
  antiAffinity: "soft"
  nodeAffinity: { }

  topologySpreadConstraints: [ ]
  podManagementPolicy: "Parallel"
  schedulerName: ""

  lifecycle: { }
  keystore: [ ]

  priorityClassName: ""
  enableServiceLinks: true

  networkHost: "0.0.0.0"
  protocol: http
  httpPort: 9200
  transportPort: 9300

  service:
    labels: { }
    labelsHeadless: { }
    headless:
      annotations: { }
    type: ClusterIP
    nodePort: ""
    annotations: { }
    httpPortName: http
    transportPortName: transport
    loadBalancerIP: ""
    loadBalancerSourceRanges: [ ]
    externalTrafficPolicy: ""

  updateStrategy: RollingUpdate
  maxUnavailable: 1
  masterTerminationFix: false
  terminationGracePeriod: 120

  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000

  fsGroup: ""

  securityContext:
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 1000

  securityConfig:
    enabled: true
    path: "/usr/share/opensearch/plugins/opensearch-security/securityconfig"
    actionGroupsSecret: "observability-opensearch-security-plugin"
    configSecret: "observability-opensearch-security-plugin"
    internalUsersSecret: "observability-opensearch-security-plugin"
    rolesSecret: "observability-opensearch-security-plugin"
    rolesMappingSecret: "observability-opensearch-security-plugin"
    tenantsSecret: "observability-opensearch-security-plugin"
    config:
      securityConfigSecret: ""
      dataComplete: false
      data:
        audit.yml: |-
          ---
          _meta:
            type: "audit"
            config_version: 2

          config:
            enabled: true
            audit:
              enable_rest: true
              disabled_rest_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              enable_transport: true
              disabled_transport_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              ignore_users:
                - kibanaserver
              ignore_requests: []
              resolve_bulk_requests: false
              log_request_body: true
              resolve_indices: true
              exclude_sensitive_headers: true
            compliance:
              enabled: true
              internal_config: true
              external_config: false
              read_metadata_only: true
              read_watched_fields: {}
              read_ignore_users:
                - kibanaserver
              write_metadata_only: true
              write_log_diffs: false
              write_watched_indices: []
              write_ignore_users:
                - kibanaserver
        nodes_dn.yml: |-
          ---
          _meta:
            type: "nodesdn"
            config_version: 2
        whitelist.yml: |-
          ---
          _meta:
            type: "whitelist"
            config_version: 2
          
          config:
            enabled: false
            requests:
              /_cluster/settings:
                - GET
              /_cat/nodes:
                - GET

  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 3
    timeoutSeconds: 2000

  nodeSelector: { }
  tolerations: [ ]

  ingress:
    enabled: false

  networkPolicy:
    create: false
    http:
      enabled: false

  sysctlVmMaxMapCount: 262144
  sysctl:
    enabled: false

  plugins:
    enabled: false
    installList: [ ]

  extraObjects: [ ]

opensearch-dashboards:
  nameOverride: ""
  fullnameOverride: "observability-opensearch-dashboards"

  opensearchHosts: "https://observability-opensearch-master-headless:9200"

  replicaCount: 1

  image:
    repository: "opensearchproject/opensearch-dashboards"
    tag: ""
    pullPolicy: "IfNotPresent"

  imagePullSecrets: [ ]

  serviceAccount:
    create: false
    annotations: { }
    name: ""

  rbac:
    create: false

  secretMounts: [ ]
  podAnnotations: { }
  extraEnvs: [ ]
  envFrom: [ ]
  extraVolumes: [ ]
  extraVolumeMounts: [ ]

  extraInitContainers: ""
  extraContainers: ""

  podSecurityContext: { }

  securityContext:
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 1000

  config:
    opensearch_dashboards.yml: |
      opensearch.ssl.verificationMode: none
      
      opensearch.username: kibanaserver
      opensearch.password: kibanaserver
      
      opensearch.requestHeadersWhitelist: [authorization, securitytenant]
      
      opensearch_security.multitenancy.enabled: true
      opensearch_security.multitenancy.tenants.enable_global: false
      opensearch_security.multitenancy.tenants.enable_private: false
      opensearch_security.multitenancy.tenants.preferred: [Private, Global]
      
      opensearch_security.readonly_mode.roles: [kibana_read_only]
      
      opensearch_security.cookie.secure: false

  priorityClassName: ""

  opensearchAccount:
    secret: ""
    keyPassphrase:
      enabled: false

  labels: { }
  hostAliases: [ ]

  serverHost: "0.0.0.0"

  service:
    type: ClusterIP
    port: 5601
    loadBalancerIP: ""
    nodePort: ""
    labels: { }
    annotations: { }
    loadBalancerSourceRanges: [ ]
    httpPortName: http

  ingress:
    enabled: true
    annotations: { }
    hosts:
      - host: opensearch-dashboard.traefik.127.0.0.1.sslip.io
        paths:
          - path: /
            backend:
              serviceName: observability-opensearch-dashboards
              servicePort: 5601
    tls: [ ]

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "1"
      memory: "1Gi"

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80

  updateStrategy:
    type: "Recreate"

  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

  extraObjects: [ ]

logstash:
  nameOverride: ""
  fullnameOverride: "observability-logstash"

  replicas: 1

  logstashConfig:
    logstash.yml: |-
      http.host: 0.0.0.0
      pipeline.ecs_compatibility: disabled

    pipelines.yml: |-
      - pipeline.id: ingest
        pipeline.workers: 1
        pipeline.batch.size: 100
        pipeline.batch.delay: 50
        pipeline.ecs_compatibility: disabled
        pipeline.ordered: false
        queue.type: memory
        path.config: "/usr/share/logstash/pipeline"
        config.reload.automatic: true
        config.reload.interval: 3s

  logstashPipeline:
    logstash.conf: |-

    000-input.conf: |-
      input {
        http {
          port => "8080"
        }
        beats {
          port => "5044"
        }
      }

    500-filter.conf: |-
      filter {
        mutate {
          add_field => { "environment" => "Production" }
        }
      }

    999-output.conf: |-
      output {
        opensearch {
          hosts => [ "https://observability-opensearch-data-az2-headless:9200", "https://observability-opensearch-data-az1-headless:9200" ]
          index  => "observability"
          user => "admin"
          password => "admin"
          ssl_certificate_verification => false
        }
      }

  logstashPatternDir: "/usr/share/logstash/patterns/"
  logstashPattern: { }

  extraEnvs: [ ]
  envFrom: [ ]

  secrets: [ ]
  secretMounts: [ ]

  hostAliases: [ ]

  image: "opensearchproject/logstash-oss-with-opensearch-output-plugin"
  imageTag: "7.16.3"
  imagePullPolicy: "IfNotPresent"
  imagePullSecrets: [ ]

  podAnnotations: { }

  labels: { }

  logstashJavaOpts: "-Xmx1g -Xms1g"

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "1"
      memory: "2Gi"

  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 1Gi

  rbac:
    create: false
    serviceAccountAnnotations: { }
    serviceAccountName: ""
    annotations: { }

  podSecurityPolicy:
    create: false

  persistence:
    enabled: false
    annotations: { }

  extraVolumes: ""
  extraVolumeMounts: ""

  extraContainers: ""
  extraInitContainers: ""

  priorityClassName: ""

  antiAffinityTopologyKey: "kubernetes.io/hostname"
  antiAffinity: "empty"
  nodeAffinity: { }
  podAffinity: { }

  podManagementPolicy: "Parallel"

  httpPort: 9600

  extraPorts: [ ]

  updateStrategy: RollingUpdate
  maxUnavailable: 1

  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000

  fsGroup: ""

  securityContext:
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 1000

  terminationGracePeriod: 1

  livenessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  readinessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 3

  schedulerName: ""

  nodeSelector: { }
  tolerations: [ ]

  lifecycle: { }

  service:
    annotations: { }
    type: ClusterIP
    loadBalancerIP: ""
    ports:
      - name: logstash
        port: 9600
        protocol: TCP
        targetPort: 9600
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8080
      - name: beats
        port: 5044
        protocol: TCP
        targetPort: 5044

  ingress:
    enabled: true
    className: ""
    pathtype: Prefix
    hosts:
      - host: logstash.traefik.127.0.0.1.sslip.io
        paths:
          - path: /
    tls: [ ]

filebeat:
  daemonset:
    enabled: false

  deployment:
    annotations: { }
    labels: { }
    affinity: { }
    enabled: true

    envFrom: [ ]
    extraEnvs: [ ]
    extraVolumes: [ ]
    extraVolumeMounts: [ ]
    secretMounts: [ ]

    filebeatConfig:
      filebeat.yml: |
        filebeat.inputs:
          - type: log
            enabled: true
            paths:
              - /tmp/server.log
            fields_under_root: true
            encoding: utf-8

        output.logstash:
          hosts: [ "observability-logstash:5044" ]
          loadbalance: true

    nodeSelector: { }
    tolerations: [ ]

    securityContext:
      runAsUser: 0
      privileged: false

    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "1"
        memory: "1Gi"

  replicas: 25

  extraContainers: ""

  extraInitContainers: [ ]

  hostPathRoot: /var/lib

  dnsConfig: { }
  hostAliases: [ ]

  image: "docker.elastic.co/beats/filebeat"
  imageTag: "7.16.3"
  imagePullPolicy: "IfNotPresent"
  imagePullSecrets: [ ]

  livenessProbe:
    exec:
      command:
        - sh
        - -c
        - |
          curl --fail 127.0.0.1:5066
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5

  readinessProbe:
    exec:
      command:
        - sh
        - -c
        - |
          filebeat test output
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5

  managedServiceAccount: true

  clusterRoleRules:
    - apiGroups:
        - ""
      resources:
        - namespaces
        - nodes
        - pods
      verbs:
        - get
        - list
        - watch

  podAnnotations: { }
  serviceAccount: ""
  serviceAccountAnnotations: { }

  terminationGracePeriod: 1
  priorityClassName: ""

  updateStrategy: RollingUpdate

  nameOverride: ""
  fullnameOverride: "observability-filebeat"

#logstash:
#  nameOverride: ""
#  fullnameOverride: "observability-logstash"
#
#  replicas: 1
#
#  logstashConfig:
#    logstash.yml: |-
#      http.host: 0.0.0.0
#      pipeline.ecs_compatibility: disabled
#
#    pipelines.yml: |-
#      - pipeline.id: ingest
#        pipeline.workers: 1
#        pipeline.batch.size: 100
#        pipeline.batch.delay: 50
#        pipeline.ecs_compatibility: disabled
#        pipeline.ordered: false
#        queue.type: memory
#        path.config: "/usr/share/logstash/pipeline"
#        config.reload.automatic: true
#        config.reload.interval: 3s
#
#  logstashPipeline:
#    logstash.conf: |-
#
#    000-input.conf: |-
#      input {
#        http {
#          port => "8080"
#        }
#        beats {
#          port => "5044"
#        }
#      }
#
#    500-filter.conf: |-
#      filter {
#        mutate {
#          add_field => { "environment" => "Production" }
#        }
#      }
#
#    999-output.conf: |-
#      output {
#        opensearch {
#          hosts => [ "https://observability-opensearch-data-az2-headless:9200", "https://observability-opensearch-data-az1-headless:9200" ]
#          index  => "observability"
#          user => "admin"
#          password => "admin"
#          ssl_certificate_verification => false
#        }
#      }
#
#  logstashPatternDir: "/usr/share/logstash/patterns/"
#  logstashPattern: { }
#
#  extraEnvs: [ ]
#  envFrom: [ ]
#
#  secrets: [ ]
#  secretMounts: [ ]
#
#  hostAliases: [ ]
#
#  image: "opensearchproject/logstash-oss-with-opensearch-output-plugin"
#  imageTag: "7.16.3"
#  imagePullPolicy: "IfNotPresent"
#  imagePullSecrets: [ ]
#
#  podAnnotations: { }
#
#  labels: { }
#
#  logstashJavaOpts: "-Xmx1g -Xms1g"
#
#  resources:
#    requests:
#      cpu: "100m"
#      memory: "128Mi"
#    limits:
#      cpu: "1"
#      memory: "2Gi"
#
#  volumeClaimTemplate:
#    accessModes: [ "ReadWriteOnce" ]
#    resources:
#      requests:
#        storage: 1Gi
#
#  rbac:
#    create: false
#    serviceAccountAnnotations: { }
#    serviceAccountName: ""
#    annotations: { }
#
#  podSecurityPolicy:
#    create: false
#
#  persistence:
#    enabled: false
#    annotations: { }
#
#  extraVolumes: ""
#  extraVolumeMounts: ""
#
#  extraContainers: ""
#  extraInitContainers: ""
#
#  priorityClassName: ""
#
#  antiAffinityTopologyKey: "kubernetes.io/hostname"
#  antiAffinity: "empty"
#  nodeAffinity: { }
#  podAffinity: { }
#
#  podManagementPolicy: "Parallel"
#
#  httpPort: 9600
#
#  extraPorts: [ ]
#
#  updateStrategy: RollingUpdate
#  maxUnavailable: 1
#
#  podSecurityContext:
#    fsGroup: 1000
#    runAsUser: 1000
#
#  fsGroup: ""
#
#  securityContext:
#    capabilities:
#      drop:
#        - ALL
#    runAsNonRoot: true
#    runAsUser: 1000
#
#  terminationGracePeriod: 1
#
#  livenessProbe:
#    httpGet:
#      path: /
#      port: http
#    initialDelaySeconds: 30
#    periodSeconds: 10
#    timeoutSeconds: 5
#    failureThreshold: 3
#    successThreshold: 1
#
#  readinessProbe:
#    httpGet:
#      path: /
#      port: http
#    initialDelaySeconds: 30
#    periodSeconds: 10
#    timeoutSeconds: 5
#    failureThreshold: 3
#    successThreshold: 3
#
#  schedulerName: ""
#
#  nodeSelector: { }
#  tolerations: [ ]
#
#  lifecycle: { }
#
#  service:
#    annotations: { }
#    type: ClusterIP
#    loadBalancerIP: ""
#    ports:
#      - name: logstash
#        port: 9600
#        protocol: TCP
#        targetPort: 9600
#      - name: http
#        port: 8080
#        protocol: TCP
#        targetPort: 8080
#      - name: beats
#        port: 5044
#        protocol: TCP
#        targetPort: 5044
#
#  ingress:
#    enabled: true
#    className: ""
#    pathtype: Prefix
#    hosts:
#      - host: logstash.traefik.127.0.0.1.sslip.io
#        paths:
#          - path: /
#    tls: [ ]
#
#filebeat:
#  daemonset:
#    enabled: false
#
#  deployment:
#    annotations: { }
#    labels: { }
#    affinity: { }
#    enabled: true
#
#    envFrom: [ ]
#    extraEnvs: [ ]
#    extraVolumes: [ ]
#    extraVolumeMounts: [ ]
#    secretMounts: [ ]
#
#    filebeatConfig:
#      filebeat.yml: |
#        filebeat.inputs:
#          - type: log
#            enabled: true
#            paths:
#              - /tmp/server.log
#            fields_under_root: true
#            encoding: utf-8
#
#        output.logstash:
#          hosts: [ "observability-logstash:5044" ]
#          loadbalance: true
#
#    nodeSelector: { }
#    tolerations: [ ]
#
#    securityContext:
#      runAsUser: 0
#      privileged: false
#
#    resources:
#      requests:
#        cpu: "100m"
#        memory: "128Mi"
#      limits:
#        cpu: "1"
#        memory: "1Gi"
#
#  replicas: 25
#
#  extraContainers: ""
#
#  extraInitContainers: [ ]
#
#  hostPathRoot: /var/lib
#
#  dnsConfig: { }
#  hostAliases: [ ]
#
#  image: "docker.elastic.co/beats/filebeat"
#  imageTag: "7.16.3"
#  imagePullPolicy: "IfNotPresent"
#  imagePullSecrets: [ ]
#
#  livenessProbe:
#    exec:
#      command:
#        - sh
#        - -c
#        - |
#          curl --fail 127.0.0.1:5066
#    failureThreshold: 3
#    initialDelaySeconds: 10
#    periodSeconds: 10
#    timeoutSeconds: 5
#
#  readinessProbe:
#    exec:
#      command:
#        - sh
#        - -c
#        - |
#          filebeat test output
#    failureThreshold: 3
#    initialDelaySeconds: 10
#    periodSeconds: 10
#    timeoutSeconds: 5
#
#  managedServiceAccount: true
#
#  clusterRoleRules:
#    - apiGroups:
#        - ""
#      resources:
#        - namespaces
#        - nodes
#        - pods
#      verbs:
#        - get
#        - list
#        - watch
#
#  podAnnotations: { }
#  serviceAccount: ""
#  serviceAccountAnnotations: { }
#
#  terminationGracePeriod: 1
#  priorityClassName: ""
#
#  updateStrategy: RollingUpdate
#
#  nameOverride: ""
#  fullnameOverride: "observability-filebeat"