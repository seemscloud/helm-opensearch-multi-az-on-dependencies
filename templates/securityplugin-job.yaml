apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "observability-opensearch.fullname" . }}-security-plugin
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  template:
    spec:
      containers:
        - name: security-plugin
          image: "{{ template "opensearch.dockerRegistry" . }}{{ .Values.securityPlugin.image.repository }}:{{ .Values.securityPlugin.tag | default .Chart.AppVersion }}"
          command: [ "/bin/bash", "-c" ]
          args:
            - |
              PORT="9200";
              ENDPOINT=observability-opensearch-master;

              read -d "" EXEC_TENANTS <<EndOfMessage
                /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh \
                -icl -nhnv -rev -h ${ENDPOINT} -p ${PORT} \
                -cacert config/certs/admin-ca.crt.pem \
                -cert config/certs/admin.crt.pem -key config/certs/admin.key.pem \
                -f config/opensearch-security/tenants.yml
              EndOfMessage

              read -d "" EXEC_REST <<EndOfMessage
                /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh \
                -icl -nhnv -rev -h ${ENDPOINT} -p ${PORT} \
                -cacert config/certs/admin-ca.crt.pem \
                -cert config/certs/admin.crt.pem -key config/certs/admin.key.pem \
                -cd config/opensearch-security
              EndOfMessage

              while true; do
                if timeout 3 /bin/bash -c "echo > /dev/tcp/${ENDPOINT}/${PORT}" ; then
                  eval "${EXEC_TENANTS}" && echo "Security plugin updated.." && break;
                fi
                echo "Waiting for port.." && sleep 1;
              done

              echo -e "---\n"

              while true; do
                if timeout 3 /bin/bash -c "echo > /dev/tcp/${ENDPOINT}/${PORT}" ; then
                  eval "${EXEC_REST}" && echo "Security plugin updated.." && break;
                fi
                echo "Waiting for port.." && sleep 1;
              done
          imagePullPolicy: {{ .Values.securityPlugin.image.pullPolicy }}
          volumeMounts:
            - mountPath: /usr/share/opensearch/plugins/opensearch-security/action_groups.yml
              name: security-config
              subPath: action_groups.yml
            - mountPath: /usr/share/opensearch/plugins/opensearch-security/config.yml
              name: security-config
              subPath: config.yml
            - mountPath: /usr/share/opensearch/plugins/opensearch-security/internal_users.yml
              name: security-config
              subPath: internal_users.yml
            - mountPath: /usr/share/opensearch/plugins/opensearch-security/roles.yml
              name: security-config
              subPath: roles.yml
            - mountPath: /usr/share/opensearch/plugins/opensearch-security/roles_mapping.yml
              name: security-config
              subPath: roles_mapping.yml
            - mountPath: /usr/share/opensearch/plugins/opensearch-security/tenants.yml
              name: security-config
              subPath: tenants.yml
            - mountPath: /usr/share/opensearch/plugins/opensearch-security/audit.yml
              name: security-config-data
              subPath: audit.yml
            - mountPath: /usr/share/opensearch/plugins/opensearch-security/nodes_dn.yml
              name: security-config-data
              subPath: nodes_dn.yml
            - mountPath: /usr/share/opensearch/plugins/opensearch-security/whitelist.yml
              name: security-config-data
              subPath: whitelist.yml
            - mountPath: /usr/share/opensearch/config/certs/admin.crt.pem
              name: admin-tls
              readOnly: true
              subPath: tls.crt
            - mountPath: /usr/share/opensearch/config/certs/admin.key.pem
              name: admin-tls
              readOnly: true
              subPath: tls.key
            - mountPath: /usr/share/opensearch/config/certs/admin-ca.crt.pem
              name: admin-tls
              readOnly: true
              subPath: ca.crt
      volumes:
        - name: security-config
          secret:
            secretName: {{ .Values.securityPlugin.secrets.perms }}
        - name: security-config-data
          secret:
            secretName: {{ .Values.securityPlugin.secrets.others }}
        - name: admin-tls
          secret:
            secretName: {{ .Values.securityPlugin.secrets.certs }}
      restartPolicy: OnFailure
