nameOverride: ""
fullnameOverride: "observability-opensearch"

environment: "prod"

issuers:
  - name: ca
    kind: Issuer
    useCA:
      enabled: false
  - name: ca-ends
    kind: Issuer
    useCA:
      enabled: true
      secretName: ca

certificates:
  - name: ca
    isCA: true
    commonName: "Root CA"
    duration: 87600h
    renewBefore: 720h
    privateKey:
      algorithm: RSA
      encoding: PKCS8
      size: 4096
    issuerRef:
      name: ca
      kind: Issuer
      group: cert-manager.io
  - name: nodes
    isCA: false
    commonName: "observability-opensearch-master"
    dnsNames:
      - "observability-opensearch-master"
      - "observability-opensearch-data-az1"
      - "observability-opensearch-data-az2"
    duration: 8640h
    renewBefore: 168h
    privateKey:
      algorithm: RSA
      encoding: PKCS8
      size: 2048
    issuerRef:
      name: ca-ends
      kind: Issuer
      group: cert-manager.io
  - name: admin
    isCA: false
    commonName: "admin"
    duration: 8640h
    renewBefore: 168h
    privateKey:
      algorithm: RSA
      encoding: PKCS8
      size: 2048
    issuerRef:
      name: ca-ends
      kind: Issuer
      group: cert-manager.io

opensearch-master:
  nameOverride: ""
  fullnameOverride: ""

  clusterName: "observability-opensearch"
  nodeGroup: "master"

  masterService: "observability-opensearch-master"

  roles:
    - master

  replicas: 2
  minimumMasterNodes: 1
  majorVersion: ""

  global:
    dockerRegistry: ""
  image:
    repository: "opensearchproject/opensearch"
    tag: ""
    pullPolicy: "IfNotPresent"
  imagePullSecrets: [ ]

  opensearchHome: /usr/share/opensearch

  config:
    opensearch.yml: |
      cluster.name: observability-opensearch
      network.host: 0.0.0.0

      plugins:
        security:
          ssl:
            transport:
              pemcert_filepath: certs/node.crt.pem
              pemkey_filepath: certs/node.key.pem
              pemtrustedcas_filepath: certs/node-ca.crt.pem
              enforce_hostname_verification: false
            http:
              enabled: true
              pemcert_filepath: certs/node.crt.pem
              pemkey_filepath: certs/node.key.pem
              pemtrustedcas_filepath: certs/node-ca.crt.pem
          allow_unsafe_democertificates: false
          allow_default_init_securityindex: true
          authcz:
            admin_dn:
              - "CN=admin"
          nodes_dn:
            - "CN=observability-opensearch-master"
            - "CN=observability-opensearch-data-az1"
            - "CN=observability-opensearch-data-az2"
          audit.type: internal_opensearch
          enable_snapshot_restore_privilege: true
          check_snapshot_restore_write_privileges: true
          restapi:
            roles_enabled: ["all_access", "security_rest_api_access"]
          system_indices:
            enabled: true
            indices:
              [
                ".opendistro-alerting-config",
                ".opendistro-alerting-alert*",
                ".opendistro-anomaly-results*",
                ".opendistro-anomaly-detector*",
                ".opendistro-anomaly-checkpoints",
                ".opendistro-anomaly-detection-state",
                ".opendistro-reports-*",
                ".opendistro-notifications-*",
                ".opendistro-notebooks",
                ".opendistro-asynchronous-search-response*",
              ]

  extraEnvs:
    - name: node.store.allow_mmap
      value: "false"
    - name: DISABLE_INSTALL_DEMO_CONFIG
      value: "true"
    - name: DISABLE_SECURITY_PLUGIN
      value: "false"
    - name: cluster.routing.allocation.awareness.attributes
      value: "zone"
    - name: cluster.routing.allocation.awareness.force.zone.values
      value: "az1,az2"
  envFrom: [ ]
  secretMounts: [ ]
  hostAliases: [ ]

  podAnnotations: { }
  labels: { }

  opensearchJavaOpts: "-Xmx2G -Xms2G"

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "4"
      memory: "3Gi"

  initResources: { }
  sidecarResources: { }

  rbac:
    create: false
    serviceAccountAnnotations: { }
    serviceAccountName: ""

  podSecurityPolicy:
    create: false

  persistence:
    enabled: false
    enableInitChown: true
    labels:
      enabled: false
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: { }

  extraVolumes:
    - name: nodes-tls
      secret:
        secretName: observability-opensearch-nodes-tls
    - name: admin-tls
      secret:
        secretName: observability-opensearch-admin-tls

  extraVolumeMounts:
    - name: nodes-tls
      mountPath: /usr/share/opensearch/config/certs/node.crt.pem
      subPath: tls.crt
      readOnly: true
    - name: nodes-tls
      mountPath: /usr/share/opensearch/config/certs/node.key.pem
      subPath: tls.key
      readOnly: true
    - name: nodes-tls
      mountPath: /usr/share/opensearch/config/certs/node-ca.crt.pem
      subPath: ca.crt
      readOnly: true
    - name: admin-tls
      mountPath: /usr/share/opensearch/config/certs/admin.crt.pem
      subPath: tls.crt
      readOnly: true
    - name: admin-tls
      mountPath: /usr/share/opensearch/config/certs/admin.key.pem
      subPath: tls.key
      readOnly: true
    - name: admin-tls
      mountPath: /usr/share/opensearch/config/certs/admin-ca.crt.pem
      subPath: ca.crt
      readOnly: true

  extraContainers: [ ]
  extraInitContainers: [ ]

  antiAffinityTopologyKey: "kubernetes.io/hostname"
  antiAffinity: "soft"
  nodeAffinity: { }

  topologySpreadConstraints: [ ]
  podManagementPolicy: "Parallel"
  schedulerName: ""

  lifecycle: { }
  keystore: [ ]

  priorityClassName: ""
  enableServiceLinks: true

  networkHost: "0.0.0.0"
  protocol: http
  httpPort: 9200
  transportPort: 9300

  service:
    labels: { }
    labelsHeadless: { }
    headless:
      annotations: { }
    type: ClusterIP
    nodePort: ""
    annotations: { }
    httpPortName: http
    transportPortName: transport
    loadBalancerIP: ""
    loadBalancerSourceRanges: [ ]
    externalTrafficPolicy: ""

  updateStrategy: RollingUpdate
  maxUnavailable: 1
  masterTerminationFix: false
  terminationGracePeriod: 120

  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000

  fsGroup: ""

  securityContext:
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 1000

  securityConfig:
    enabled: true
    path: "/usr/share/opensearch/plugins/opensearch-security/securityconfig"
    actionGroupsSecret: "observability-opensearch-security-plugin"
    configSecret: "observability-opensearch-security-plugin"
    internalUsersSecret: "observability-opensearch-security-plugin"
    rolesSecret: "observability-opensearch-security-plugin"
    rolesMappingSecret: "observability-opensearch-security-plugin"
    tenantsSecret: "observability-opensearch-security-plugin"
    config:
      securityConfigSecret: ""
      dataComplete: false
      data:
        audit.yml: |-
          ---
          _meta:
            type: "audit"
            config_version: 2

          config:
            enabled: true
            audit:
              enable_rest: true
              disabled_rest_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              enable_transport: true
              disabled_transport_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              ignore_users:
                - kibanaserver
              ignore_requests: []
              resolve_bulk_requests: false
              log_request_body: true
              resolve_indices: true
              exclude_sensitive_headers: true
            compliance:
              enabled: true
              internal_config: true
              external_config: false
              read_metadata_only: true
              read_watched_fields: {}
              read_ignore_users:
                - kibanaserver
              write_metadata_only: true
              write_log_diffs: false
              write_watched_indices: []
              write_ignore_users:
                - kibanaserver
        nodes_dn.yml: |-
          _meta:
            type: "nodesdn"
            config_version: 2
        whitelist.yml: |-
          ---
          _meta:
            type: "whitelist"
            config_version: 2
          
          config:
            enabled: false
            requests:
              /_cluster/settings:
                - GET
              /_cat/nodes:
                - GET

  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 3
    timeoutSeconds: 2000

  nodeSelector: { }
  tolerations: [ ]

  ingress:
    enabled: false

  networkPolicy:
    create: false
    http:
      enabled: false

  sysctlVmMaxMapCount: 262144
  sysctl:
    enabled: false

  plugins:
    enabled: false
    installList: [ ]

  extraObjects: [ ]

opensearch-data-az1:
  nameOverride: ""
  fullnameOverride: ""

  clusterName: "observability-opensearch"
  nodeGroup: "data-az1"

  masterService: "observability-opensearch-master"

  roles:
    - data

  replicas: 1
  minimumMasterNodes: 1
  majorVersion: ""

  global:
    dockerRegistry: ""
  image:
    repository: "opensearchproject/opensearch"
    tag: ""
    pullPolicy: "IfNotPresent"
  imagePullSecrets: [ ]

  opensearchHome: /usr/share/opensearch

  config:
    opensearch.yml: |
      cluster.name: observability-opensearch
      network.host: 0.0.0.0

      plugins:
        security:
          ssl:
            transport:
              pemcert_filepath: certs/node.crt.pem
              pemkey_filepath: certs/node.key.pem
              pemtrustedcas_filepath: certs/node-ca.crt.pem
              enforce_hostname_verification: false
            http:
              enabled: true
              pemcert_filepath: certs/node.crt.pem
              pemkey_filepath: certs/node.key.pem
              pemtrustedcas_filepath: certs/node-ca.crt.pem
          allow_unsafe_democertificates: false
          allow_default_init_securityindex: true
          authcz:
            admin_dn:
              - "CN=admin"
          nodes_dn:
            - "CN=observability-opensearch-master"
            - "CN=observability-opensearch-data-az1"
            - "CN=observability-opensearch-data-az2"
          audit.type: internal_opensearch
          enable_snapshot_restore_privilege: true
          check_snapshot_restore_write_privileges: true
          restapi:
            roles_enabled: ["all_access", "security_rest_api_access"]
          system_indices:
            enabled: true
            indices:
              [
                ".opendistro-alerting-config",
                ".opendistro-alerting-alert*",
                ".opendistro-anomaly-results*",
                ".opendistro-anomaly-detector*",
                ".opendistro-anomaly-checkpoints",
                ".opendistro-anomaly-detection-state",
                ".opendistro-reports-*",
                ".opendistro-notifications-*",
                ".opendistro-notebooks",
                ".opendistro-asynchronous-search-response*",
              ]

  extraEnvs:
    - name: node.store.allow_mmap
      value: "false"
    - name: DISABLE_INSTALL_DEMO_CONFIG
      value: "true"
    - name: DISABLE_SECURITY_PLUGIN
      value: "false"
    - name: node.attr.zone
      value: "az1"
  envFrom: [ ]
  secretMounts: [ ]
  hostAliases: [ ]

  podAnnotations: { }
  labels: { }

  opensearchJavaOpts: "-Xmx8G -Xms8G"

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "4"
      memory: "9Gi"

  initResources: { }
  sidecarResources: { }

  rbac:
    create: false
    serviceAccountAnnotations: { }
    serviceAccountName: ""

  podSecurityPolicy:
    create: false

  persistence:
    enabled: false
    enableInitChown: true
    labels:
      enabled: false
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: { }

  extraVolumes:
    - name: nodes-tls
      secret:
        secretName: observability-opensearch-nodes-tls
    - name: admin-tls
      secret:
        secretName: observability-opensearch-admin-tls

  extraVolumeMounts:
    - name: nodes-tls
      mountPath: /usr/share/opensearch/config/certs/node.crt.pem
      subPath: tls.crt
      readOnly: true
    - name: nodes-tls
      mountPath: /usr/share/opensearch/config/certs/node.key.pem
      subPath: tls.key
      readOnly: true
    - name: nodes-tls
      mountPath: /usr/share/opensearch/config/certs/node-ca.crt.pem
      subPath: ca.crt
      readOnly: true
    - name: admin-tls
      mountPath: /usr/share/opensearch/config/certs/admin.crt.pem
      subPath: tls.crt
      readOnly: true
    - name: admin-tls
      mountPath: /usr/share/opensearch/config/certs/admin.key.pem
      subPath: tls.key
      readOnly: true
    - name: admin-tls
      mountPath: /usr/share/opensearch/config/certs/admin-ca.key.pem
      subPath: ca.crt
      readOnly: true

  extraContainers: [ ]
  extraInitContainers: [ ]

  antiAffinityTopologyKey: "kubernetes.io/hostname"
  antiAffinity: "soft"
  nodeAffinity: { }

  topologySpreadConstraints: [ ]
  podManagementPolicy: "Parallel"

  schedulerName: ""
  lifecycle: { }

  priorityClassName: ""
  keystore: [ ]
  enableServiceLinks: true

  networkHost: "0.0.0.0"
  protocol: http
  httpPort: 9200
  transportPort: 9300

  service:
    labels: { }
    labelsHeadless: { }
    headless:
      annotations: { }
    type: ClusterIP
    nodePort: ""
    annotations: { }
    httpPortName: http
    transportPortName: transport
    loadBalancerIP: ""
    loadBalancerSourceRanges: [ ]
    externalTrafficPolicy: ""

  updateStrategy: RollingUpdate
  maxUnavailable: 1
  masterTerminationFix: false
  terminationGracePeriod: 120

  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000

  fsGroup: ""

  securityContext:
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 1000

  securityConfig:
    enabled: true
    path: "/usr/share/opensearch/plugins/opensearch-security/securityconfig"
    actionGroupsSecret: "observability-opensearch-security-plugin"
    configSecret: "observability-opensearch-security-plugin"
    internalUsersSecret: "observability-opensearch-security-plugin"
    rolesSecret: "observability-opensearch-security-plugin"
    rolesMappingSecret: "observability-opensearch-security-plugin"
    tenantsSecret: "observability-opensearch-security-plugin"
    config:
      securityConfigSecret: ""
      dataComplete: false
      data:
        audit.yml: |-
          ---
          _meta:
            type: "audit"
            config_version: 2

          config:
            enabled: true
            audit:
              enable_rest: true
              disabled_rest_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              enable_transport: true
              disabled_transport_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              ignore_users:
                - kibanaserver
              ignore_requests: []
              resolve_bulk_requests: false
              log_request_body: true
              resolve_indices: true
              exclude_sensitive_headers: true
            compliance:
              enabled: true
              internal_config: true
              external_config: false
              read_metadata_only: true
              read_watched_fields: {}
              read_ignore_users:
                - kibanaserver
              write_metadata_only: true
              write_log_diffs: false
              write_watched_indices: []
              write_ignore_users:
                - kibanaserver
        nodes_dn.yml: |-
          _meta:
            type: "nodesdn"
            config_version: 2
        whitelist.yml: |-
          ---
          _meta:
            type: "whitelist"
            config_version: 2
          
          config:
            enabled: false
            requests:
              /_cluster/settings:
                - GET
              /_cat/nodes:
                - GET

  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 3
    timeoutSeconds: 2000

  nodeSelector: { }
  tolerations: [ ]

  ingress:
    enabled: false

  networkPolicy:
    create: false
    http:
      enabled: false

  sysctlVmMaxMapCount: 262144
  sysctl:
    enabled: false

  plugins:
    enabled: false
    installList: [ ]

  extraObjects: [ ]

opensearch-data-az2:
  nameOverride: ""
  fullnameOverride: ""

  clusterName: "observability-opensearch"
  nodeGroup: "data-az2"

  masterService: "observability-opensearch-master"

  roles:
    - data

  replicas: 1
  minimumMasterNodes: 1
  majorVersion: ""

  global:
    dockerRegistry: ""
  image:
    repository: "opensearchproject/opensearch"
    tag: ""
    pullPolicy: "IfNotPresent"
  imagePullSecrets: [ ]

  opensearchHome: /usr/share/opensearch

  config:
    opensearch.yml: |
      cluster.name: observability-opensearch
      network.host: 0.0.0.0

      plugins:
        security:
          ssl:
            transport:
              pemcert_filepath: certs/node.crt.pem
              pemkey_filepath: certs/node.key.pem
              pemtrustedcas_filepath: certs/node-ca.crt.pem
              enforce_hostname_verification: false
            http:
              enabled: true
              pemcert_filepath: certs/node.crt.pem
              pemkey_filepath: certs/node.key.pem
              pemtrustedcas_filepath: certs/node-ca.crt.pem
          allow_unsafe_democertificates: false
          allow_default_init_securityindex: true
          authcz:
            admin_dn:
              - "CN=admin"
          nodes_dn:
            - "CN=observability-opensearch-master"
            - "CN=observability-opensearch-data-az1"
            - "CN=observability-opensearch-data-az2"
          audit.type: internal_opensearch
          enable_snapshot_restore_privilege: true
          check_snapshot_restore_write_privileges: true
          restapi:
            roles_enabled: ["all_access", "security_rest_api_access"]
          system_indices:
            enabled: true
            indices:
              [
                ".opendistro-alerting-config",
                ".opendistro-alerting-alert*",
                ".opendistro-anomaly-results*",
                ".opendistro-anomaly-detector*",
                ".opendistro-anomaly-checkpoints",
                ".opendistro-anomaly-detection-state",
                ".opendistro-reports-*",
                ".opendistro-notifications-*",
                ".opendistro-notebooks",
                ".opendistro-asynchronous-search-response*",
              ]

  extraEnvs:
    - name: node.store.allow_mmap
      value: "false"
    - name: DISABLE_INSTALL_DEMO_CONFIG
      value: "true"
    - name: DISABLE_SECURITY_PLUGIN
      value: "false"
    - name: node.attr.zone
      value: "az2"
  envFrom: [ ]
  secretMounts: [ ]
  hostAliases: [ ]

  podAnnotations: { }
  labels: { }

  opensearchJavaOpts: "-Xmx8G -Xms8G"

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "4"
      memory: "9Gi"

  initResources: { }
  sidecarResources: { }

  rbac:
    create: false
    serviceAccountAnnotations: { }
    serviceAccountName: ""

  podSecurityPolicy:
    create: false

  persistence:
    enabled: false
    enableInitChown: true
    labels:
      enabled: false
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: { }

  extraVolumes:
    - name: nodes-tls
      secret:
        secretName: observability-opensearch-nodes-tls
    - name: admin-tls
      secret:
        secretName: observability-opensearch-admin-tls

  extraVolumeMounts:
    - name: nodes-tls
      mountPath: /usr/share/opensearch/config/certs/node.crt.pem
      subPath: tls.crt
      readOnly: true
    - name: nodes-tls
      mountPath: /usr/share/opensearch/config/certs/node.key.pem
      subPath: tls.key
      readOnly: true
    - name: nodes-tls
      mountPath: /usr/share/opensearch/config/certs/node-ca.crt.pem
      subPath: ca.crt
      readOnly: true
    - name: admin-tls
      mountPath: /usr/share/opensearch/config/certs/admin.crt.pem
      subPath: tls.crt
      readOnly: true
    - name: admin-tls
      mountPath: /usr/share/opensearch/config/certs/admin.key.pem
      subPath: tls.key
      readOnly: true
    - name: admin-tls
      mountPath: /usr/share/opensearch/config/certs/admin-ca.crt.pem
      subPath: ca.crt
      readOnly: true

  extraContainers: [ ]
  extraInitContainers: [ ]

  antiAffinityTopologyKey: "kubernetes.io/hostname"
  antiAffinity: "soft"
  nodeAffinity: { }

  topologySpreadConstraints: [ ]
  podManagementPolicy: "Parallel"
  schedulerName: ""

  lifecycle: { }
  keystore: [ ]

  priorityClassName: ""
  enableServiceLinks: true

  networkHost: "0.0.0.0"
  protocol: http
  httpPort: 9200
  transportPort: 9300

  service:
    labels: { }
    labelsHeadless: { }
    headless:
      annotations: { }
    type: ClusterIP
    nodePort: ""
    annotations: { }
    httpPortName: http
    transportPortName: transport
    loadBalancerIP: ""
    loadBalancerSourceRanges: [ ]
    externalTrafficPolicy: ""

  updateStrategy: RollingUpdate
  maxUnavailable: 1
  masterTerminationFix: false
  terminationGracePeriod: 120

  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000

  fsGroup: ""

  securityContext:
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 1000

  securityConfig:
    enabled: true
    path: "/usr/share/opensearch/plugins/opensearch-security/securityconfig"
    actionGroupsSecret: "observability-opensearch-security-plugin"
    configSecret: "observability-opensearch-security-plugin"
    internalUsersSecret: "observability-opensearch-security-plugin"
    rolesSecret: "observability-opensearch-security-plugin"
    rolesMappingSecret: "observability-opensearch-security-plugin"
    tenantsSecret: "observability-opensearch-security-plugin"
    config:
      securityConfigSecret: ""
      dataComplete: false
      data:
        audit.yml: |-
          ---
          _meta:
            type: "audit"
            config_version: 2

          config:
            enabled: true
            audit:
              enable_rest: true
              disabled_rest_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              enable_transport: true
              disabled_transport_categories:
                - AUTHENTICATED
                - GRANTED_PRIVILEGES
              ignore_users:
                - kibanaserver
              ignore_requests: []
              resolve_bulk_requests: false
              log_request_body: true
              resolve_indices: true
              exclude_sensitive_headers: true
            compliance:
              enabled: true
              internal_config: true
              external_config: false
              read_metadata_only: true
              read_watched_fields: {}
              read_ignore_users:
                - kibanaserver
              write_metadata_only: true
              write_log_diffs: false
              write_watched_indices: []
              write_ignore_users:
                - kibanaserver
        nodes_dn.yml: |-
          ---
          _meta:
            type: "nodesdn"
            config_version: 2
        whitelist.yml: |-
          ---
          _meta:
            type: "whitelist"
            config_version: 2
          
          config:
            enabled: false
            requests:
              /_cluster/settings:
                - GET
              /_cat/nodes:
                - GET

  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 3
    timeoutSeconds: 2000

  nodeSelector: { }
  tolerations: [ ]

  ingress:
    enabled: false

  networkPolicy:
    create: false
    http:
      enabled: false

  sysctlVmMaxMapCount: 262144
  sysctl:
    enabled: false

  plugins:
    enabled: false
    installList: [ ]

  extraObjects: [ ]

opensearch-dashboards:
  nameOverride: ""
  fullnameOverride: "observability-opensearch-dashboards"

  opensearchHosts: "https://observability-opensearch-master-headless:9200"

  replicaCount: 1

  image:
    repository: "opensearchproject/opensearch-dashboards"
    tag: ""
    pullPolicy: "IfNotPresent"

  imagePullSecrets: [ ]

  serviceAccount:
    create: false
    annotations: { }
    name: ""

  rbac:
    create: false

  secretMounts: [ ]
  podAnnotations: { }
  extraEnvs: [ ]
  envFrom: [ ]
  extraVolumes: [ ]
  extraVolumeMounts: [ ]

  extraInitContainers: ""
  extraContainers: ""

  podSecurityContext: { }

  securityContext:
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 1000

  config:
    opensearch_dashboards.yml: |
      opensearch.ssl.verificationMode: none
      
      opensearch.username: kibanaserver
      opensearch.password: kibanaserver
      
      opensearch.requestHeadersWhitelist: [authorization, securitytenant]
      
      opensearch_security.multitenancy.enabled: true
      opensearch_security.multitenancy.tenants.enable_global: false
      opensearch_security.multitenancy.tenants.enable_private: false
      opensearch_security.multitenancy.tenants.preferred: [Private, Global]
      
      opensearch_security.readonly_mode.roles: [kibana_read_only]
      
      opensearch_security.cookie.secure: false

  priorityClassName: ""

  opensearchAccount:
    secret: ""
    keyPassphrase:
      enabled: false

  labels: { }
  hostAliases: [ ]

  serverHost: "0.0.0.0"

  service:
    type: ClusterIP
    port: 5601
    loadBalancerIP: ""
    nodePort: ""
    labels: { }
    annotations: { }
    loadBalancerSourceRanges: [ ]
    httpPortName: http

  ingress:
    enabled: true
    annotations: { }
    hosts:
      - host: opensearch-dashboard.traefik.127.0.0.1.sslip.io
        paths:
          - path: /
            backend:
              serviceName: observability-opensearch-dashboards
              servicePort: 5601
    tls: [ ]

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "4"
      memory: "4Gi"

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80

  updateStrategy:
    type: "Recreate"

  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

  extraObjects: [ ]